{"version":3,"sources":["services/puhelinluettelo.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","getAll","axios","get","then","response","data","newObject","post","update","id","put","delete","Notification","_ref","message","status","React","createElement","className","Person","_ref2","person","handleDelete","name","number","DeleteButton","SearchForm","_ref3","handleSearch","newSearch","onChange","value","AddPersonForm","_ref4","handleNameChange","handleNumberChange","newName","newNumber","addName","type","onClick","_ref5","ShowNumbers","_ref6","persons","map","key","App","setPersons","useState","setNewName","setNewNumber","setNewSearch","setMessage","setStatus","useEffect","puhelinluetteloService","Array","isArray","catch","error","console","messageTimer","setTimeout","clearTimeout","personsToShow","filter","toLowerCase","includes","event","target","preventDefault","find","window","confirm","updatedPerson","returnedData","p","concat","n","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.afab9c0a.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst del = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, update, del}\r\n","import React, { useState, useEffect } from 'react'\nimport puhelinluetteloService from './services/puhelinluettelo'\nimport './index.css'\n\nconst Notification = ({ message, status }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={status}>\n      {message}\n    </div>\n  )\n}\n\nconst Person = ({ person, handleDelete }) => {\n  return (\n    <p>{person.name} {person.number} <DeleteButton id={person.id} handleDelete={handleDelete}></DeleteButton></p>\n  )\n}\n\nconst SearchForm = ({ handleSearch, newSearch }) => \n   (\n    <form>\n      <div>\n        filter shown with <input onChange={handleSearch} value={newSearch} />\n      </div>\n    </form>\n  );\n\nconst AddPersonForm = ({ handleNameChange, handleNumberChange, newName, newNumber, addName }) => (\n  <form>\n  <div>\n    name: <input onChange={handleNameChange} value={newName} />\n  </div>\n  <div>\n    number: <input onChange={handleNumberChange} value={newNumber} />\n  </div>\n  <div>\n    <button type=\"submit\" onClick={addName}>add</button>\n  </div>\n</form>\n)\n\nconst DeleteButton = ({ id, handleDelete }) => (\n  <button onClick={() => handleDelete(id)}>Delete</button>\n)\n\nconst ShowNumbers = ({ persons, handleDelete }) => {\n  return (\n    <div>\n      {persons.map(person => \n        <Person key={person.id} person={person} handleDelete={handleDelete} /> )}\n    </div>\n  );\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newSearch, setNewSearch] = useState('')\n  const [message, setMessage] = useState('')\n  const [status, setStatus] = useState('')\n  \n  useEffect(() => {\n    puhelinluetteloService.getAll().then(data => {\n      if (Array.isArray(data)) {\n        setPersons(data);  // aseta persons vain, jos data on taulukko\n      } else {\n        setPersons([]);  // vaihtoehtoisesti aseta tyhjä taulukko\n      }\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n      setPersons([]);  // virheen sattuessa aseta tyhjä taulukko\n    });\n  }, []);\n  \n\n  useEffect(() => {\n    if (message) {\n      const messageTimer = setTimeout(() => {\n        setMessage(null)\n        setStatus('')\n      }, 3000)\n      return () => clearTimeout(messageTimer)\n    }\n  }, [message])\n\n  const addName = (event) => {\n    event.preventDefault()\n\n    const person = persons.find(person => person.name === newName)\n\n    if (person) {\n      if (person && window.confirm(`${person.name} is already added to phonebook, replace the old number with a new one?`)) {\n        const updatedPerson = { ...person, number: newNumber}\n        puhelinluetteloService.update(person.id, updatedPerson).then( returnedData => {\n          setPersons(persons.map(p => p.id !== person.id ? p : returnedData))\n          setNewName('')\n          setNewNumber('')\n          setStatus('success')\n          setMessage(`Phone number changed for ${newName}`)\n        }).catch(error => {\n          setStatus('error')\n          setMessage(error.response.data.error)\n          //setMessage(`'${person.name}' has already been deleted from server`)\n        })\n      }\n    } else {\n      const newPerson = {\n        name: newName,\n        number: newNumber\n      }\n      puhelinluetteloService.create(newPerson).then(\n        returnedData => {\n          setPersons(persons.concat(returnedData))\n          setStatus('success')\n          setMessage(`Added ${newName}`)\n          setNewName('')\n          setNewNumber('')\n        }\n      ).catch(error => {\n        if (error.response.data) {\n          setStatus('error')\n          // Annetaan backendin kämänen virheilmoitus, vaikka tuollaisia ei filtteröimättä ole hyvä antaa...\n          setMessage(error.response.data.error)\n      }\n      })\n    }\n  }\n\n  const handleDelete = (id) => {\n    const person = persons.find(p => p.id === id)\n    if (person && window.confirm(`Delete ${person.name}?`)) {\n      puhelinluetteloService.del(id).then(() => {\n        setPersons(persons.filter(p => p.id !== id))\n        setStatus('success')\n        setMessage(`Deleted ${person.name}`)\n      }).catch(error => {\n        setStatus('error')\n        setMessage(`the note '${person.name}' was already deleted from server`)\n        setPersons(person.filter(n => n.id !== id))\n      })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearch = (event) => {\n    setNewSearch(event.target.value)\n  }\n\n  const personsToShow = (newSearch === '')\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(newSearch.toLowerCase()))\n\n  return (\n    <div>\n      <Notification message={message} status={status} />\n      <h2>Phonebook</h2>\n      <SearchForm handleSearch={handleSearch} newSearch={newSearch} />\n      <h2>Add a new</h2>  \n      <AddPersonForm \n        handleNameChange={handleNameChange} \n        newName={newName} \n        handleNumberChange={handleNumberChange} \n        newNumber={newNumber} \n        addName={addName} \n      />\n      <h2>Numbers</h2>\n      <ShowNumbers persons={personsToShow} handleDelete={handleDelete} />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}